memberSearchIndex = [{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"accumulate(Node, TransferResult<AccumulationValue, AccumulationStore>, String...)","url":"accumulate(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult,java.lang.String...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","url":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","url":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","url":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","url":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotationsForWarnRedundant(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotationsForWarnRedundant(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","url":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","url":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(FieldAccess)","url":"addInitializedField(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(VariableElement)","url":"addInitializedField(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"adjustMethodNameUsingValueChecker(String, MethodInvocationTree)","url":"adjustMethodNameUsingValueChecker(java.lang.String,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"allSubtypes(TypeMirror)","url":"allSubtypes(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"ALWAYSSAFE"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"annoFormatter"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"annotationsForIrrelevantJavaType(TypeMirror)","url":"annotationsForIrrelevantJavaType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"anyOfTheseNames(ImmutableSet<String>)","url":"anyOfTheseNames(com.google.common.collect.ImmutableSet)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"areAllFieldsInitializedOnly(ClassTree)","url":"areAllFieldsInitializedOnly(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"array"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"ARRAY"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"asFormatCallCategories(MethodInvocationNode)","url":"asFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"atypeFactory"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"AutoValueSupport(CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"BaseAnnotatedTypeFactoryForIndexChecker(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"BINARY_NAME"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"BOTH"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"bothHaveSpecificPrefix(Prefix, Prefix, Prefix)","url":"bothHaveSpecificPrefix(org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithDefaultPrefix(ProcessingEnvironment, Class<? extends Annotation>)","url":"buildAnnoMirrorWithDefaultPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithNoPrefix(ProcessingEnvironment, CharSequence)","url":"buildAnnoMirrorWithNoPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, CharSequence, Prefix)","url":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, Class<? extends Annotation>, Prefix)","url":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"CalledMethodsAnalysis(BaseTypeChecker, CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"CalledMethodsAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"CalledMethodsChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"CalledMethodsTransfer(CalledMethodsAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnalysis)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"CalledMethodsVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"canCreateObligations()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME_AND_BINARY_NAME"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","url":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"capitalize(String)","url":"capitalize(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"categoriesToFormatAnnotation(ConversionCategory[])","url":"categoriesToFormatAnnotation(org.checkerframework.checker.formatter.qual.ConversionCategory[])"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"categoriesToFormatAnnotation(I18nConversionCategory[])","url":"categoriesToFormatAnnotation(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory[])"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"checkCanonicalName(String)","url":"checkCanonicalName(java.lang.String)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkContract(JavaExpression, AnnotationMirror, AnnotationMirror, CFAbstractStore<?, ?>)","url":"checkContract(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"checker"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"checkExceptionalPostcondition(EnsuresCalledMethodOnExceptionContract, MethodTree)","url":"checkExceptionalPostcondition(org.checkerframework.checker.calledmethods.EnsuresCalledMethodOnExceptionContract,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkExceptionParameter(CatchTree)","url":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkExtendsAndImplements(ClassTree)","url":"checkExtendsAndImplements(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkFieldsInitialized(Tree, boolean, Store, List<? extends AnnotationMirror>)","url":"checkFieldsInitialized(com.sun.source.tree.Tree,boolean,Store,java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkForRedundantTests(BinaryTree)","url":"checkForRedundantTests(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"checkReceiverOverride()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","url":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkThrownExpression(ThrowTree)","url":"checkThrownExpression(com.sun.source.tree.ThrowTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"classGetCanonicalName"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"collectionToArrayHeuristics"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"CollectionToArrayHeuristics(BaseTypeChecker, NullnessAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"CommitmentTreeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"CommitmentTypeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"CompilerMessagesAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesChecker","l":"CompilerMessagesChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainAnonymousClassToUI(TypeElement)","url":"constrainAnonymousClassToUI(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainLambdaToUI(LambdaExpressionTree)","url":"constrainLambdaToUI(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"constructorFromUse(NewClassTree, boolean)","url":"constructorFromUse(com.sun.source.tree.NewClassTree,boolean)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType, boolean)","url":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,boolean)"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"contains(Types, TypeMirror)","url":"contains(javax.lang.model.util.Types,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>, Tree)","url":"containsNullnessAnnotation(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>)","url":"containsNullnessAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToAnnotation(ProcessingEnvironment)","url":"convertToAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToSubstringIndexAnnotation(ProcessingEnvironment)","url":"convertToSubstringIndexAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","url":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","url":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"copyAdd(char, OffsetEquation)","url":"copyAdd(char,org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"COUNT_FRAMEWORK_BUILD_CALLS"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"COUNT_MUST_CALL"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"create(int)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"create(MethodInvocationTree, AnnotatedTypeFactory)","url":"create(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createBasicTreeAnnotator()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createCalledMethods(String...)","url":"createCalledMethods(java.lang.String...)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createCombinedSameLen(List<JavaExpression>, List<AnnotationMirror>)","url":"createCombinedSameLen(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createCopiedStore(KeyForStore)","url":"createCopiedStore(org.checkerframework.checker.nullness.KeyForStore)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createCopiedStore(LockStore)","url":"createCopiedStore(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createCopiedStore(NullnessStore)","url":"createCopiedStore(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createDefaultForTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"createDependentTypesTreeAnnotator()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"createFactory(CompilationUnitTree)","url":"createFactory(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.optional","c":"OptionalAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, LockStore, LockTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<KeyForValue, KeyForStore, KeyForTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<NullnessValue, NullnessStore, NullnessTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"createFormatForCall(MethodInvocationTree, I18nFormatterAnnotatedTypeFactory)","url":"createFormatForCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(Set<String>)","url":"createKeyForAnnotationMirrorWithValue(java.util.Set)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(String)","url":"createKeyForAnnotationMirrorWithValue(java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(List<String>)","url":"createLessThanQualifier(java.util.List)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(String)","url":"createLessThanQualifier(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createLiteral(int)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createMustCall(List<String>)","url":"createMustCall(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetForInt(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromJavaExpression(String)","url":"createOffsetFromJavaExpression(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNode(Node, AnnotationProvider, char)","url":"createOffsetFromNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.javacutil.AnnotationProvider,char)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNodesValue(Node, ValueAnnotatedTypeFactory, char)","url":"createOffsetFromNodesValue(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.common.value.ValueAnnotatedTypeFactory,char)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"createOverrideChecker(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierUpperBounds()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","url":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","url":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSameLen(Collection<String>)","url":"createSameLen(java.util.Collection)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"createTemporaryVar(Node)","url":"createTemporaryVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createTransferFunction()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotatedTypeMirror, AnnotationMirror, UpperBoundChecker)","url":"createUBQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, String, UpperBoundChecker)","url":"createUBQualifier(javax.lang.model.element.AnnotationMirror,java.lang.String,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, UpperBoundChecker)","url":"createUBQualifier(javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>, String)","url":"createUBQualifier(java.util.List,java.util.List,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>)","url":"createUBQualifier(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(String, String)","url":"createUBQualifier(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(Class<?>)","url":"createUnderInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(TypeMirror)","url":"createUnderInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(Class<?>)","url":"createUnknownInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(TypeMirror)","url":"createUnknownInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"currentMethods"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"debugSpew"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"debugSpew"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_BUILDER_FRAMEWORK_SUPPORTS"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_RETURNS_RECEIVER"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"divide(int)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"DOT_SEPARATED_IDENTIFIERS"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"Effect(Class<? extends Annotation>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"EffectRange(Effect, Effect)","url":"%3Cinit%3E(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"effStack"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"elements"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"elseStore"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"EMPTY"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"ENABLE_WPI_FOR_RLC"},{"p":"org.checkerframework.checker.calledmethods","c":"EnsuresCalledMethodOnExceptionContract","l":"EnsuresCalledMethodOnExceptionContract(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldIfExpressionElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldValueElement"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Effect)","url":"equals(org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.calledmethods","c":"EnsuresCalledMethodOnExceptionContract","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"errMissingFormatAnnotation()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalArgumentException)","url":"exceptionToInvalidFormatAnnotation(java.lang.IllegalArgumentException)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalFormatException)","url":"exceptionToInvalidFormatAnnotation(java.util.IllegalFormatException)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","url":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","url":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"FBCBOTTOM"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_BOTTOM"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_TOP"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_UNQUALIFIED"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FenumAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"FenumChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"FenumQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"FenumVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement, boolean, Tree)","url":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement,boolean,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement)","url":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"finishValue(NullnessValue, NullnessStore, NullnessStore)","url":"finishValue(org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessStore,org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"finishValue(NullnessValue, NullnessStore)","url":"finishValue(org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMAT_NAME"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","url":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","url":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","url":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATBOTTOM"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATMETHOD"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"formatStringIndex(ExecutableElement)","url":"formatStringIndex(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FormatterAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterChecker","l":"FormatterChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"FormatterTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"FormatterTreeUtil(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"FormatterVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatValueElement"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"from"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"g"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"getAllAbstractMethods(TypeElement)","url":"getAllAbstractMethods(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getAllFields(ClassTree)","url":"getAllFields(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"getAnalysis()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"getAnnot()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getAnnotatedType(Tree)","url":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.optional","c":"OptionalAnnotatedTypeFactory","l":"getAnnotatedType(Tree)","url":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","url":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","url":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","url":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"getAnnotationForRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","url":"getAnnotationForRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getArgTypes()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"getCalledMethods(AnnotationMirror)","url":"getCalledMethods(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getComputedEffectAtCallsite(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedDeclaredType, ExecutableElement)","url":"getComputedEffectAtCallsite(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtInvocation(MethodInvocationNode, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","url":"getCreatesMustCallForExpressionsAtInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtMethodDeclaration(MethodTree, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","url":"getCreatesMustCallForExpressionsAtMethodDeclaration(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDeclaredEffect(ExecutableElement)","url":"getDeclaredEffect(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDefaultTypeDeclarationBounds()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getDefaultValueAnnotatedType(TypeMirror)","url":"getDefaultValueAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","url":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getEnsuresCalledMethodsListValueElement()"},{"p":"org.checkerframework.checker.tainting","c":"TaintingAnnotatedTypeFactory","l":"getEnumConstructorQualifiers()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getError()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"getExceptionalPostconditions(ExecutableElement)","url":"getExceptionalPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getExceptionalPostconditions(ExecutableElement)","url":"getExceptionalPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.calledmethods","c":"EnsuresCalledMethodOnExceptionContract","l":"getExpression()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getFieldInvariantAnnotation()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getFieldInvariantAnnotation()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatType()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(AnnotationMirror)","url":"getGroupCount(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(String)","url":"getGroupCount(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"getHasFormatCallCategories(MethodInvocationNode)","url":"getHasFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"getIgnoredExceptions()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.optional","c":"OptionalChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getInferedEffectForLambdaExpression(LambdaExpressionTree)","url":"getInferedEffectForLambdaExpression(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInitializationAnnotations()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInitializedInvariantFields(Store, TreePath)","url":"getInitializedInvariantFields(Store,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getInt()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getIntOffsetEquation(Set<OffsetEquation>)","url":"getIntOffsetEquation(java.util.Set)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInvalidConstructorReturnTypeAnnotations()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidError()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidInvocationType()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"getKeyForMaps()"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"getLengthSequenceTree(Tree, IndexMethodIdentifier, ProcessingEnvironment)","url":"getLengthSequenceTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.IndexMethodIdentifier,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(AnnotationMirror)","url":"getLessThanExpressions(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(ExpressionTree)","url":"getLessThanExpressions(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"getLookupKeys()"},{"p":"org.checkerframework.checker.calledmethods","c":"EnsuresCalledMethodOnExceptionContract","l":"getMethod()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getMethodReturnType(MethodTree, ReturnTree)","url":"getMethodReturnType(com.sun.source.tree.MethodTree,com.sun.source.tree.ReturnTree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getMustCallAnnotation(Object)","url":"getMustCallAnnotation(java.lang.Object)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getMustCallValueElement()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getNarrowedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getNarrowedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getNullnessAnnotations()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getParamTypes()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotatedTypeMirror)","url":"getPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotationMirror)","url":"getPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getSameLensFromString(String, Tree, TreePath)","url":"getSameLensFromString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getSearchIndexAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getSelfType(Tree)","url":"getSelfType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"getSequences()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getStoreForBlock(boolean, Block, Block)","url":"getStoreForBlock(boolean,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromReceiver(JavaExpression, BaseAnnotatedTypeFactoryForIndexChecker)","url":"getSubsequenceFromReceiver(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromTree(Tree, BaseAnnotatedTypeFactoryForIndexChecker)","url":"getSubsequenceFromTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"getSupportedCheckers()"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getTempVar(Node)","url":"getTempVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getTree()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getTypeDeclarationBounds(TypeMirror)","url":"getTypeDeclarationBounds(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getTypeFactoryOfSubcheckerOrNull(Class<? extends BaseTypeChecker>)","url":"getTypeFactoryOfSubcheckerOrNull(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getTypeFrameFromAnnotation(AnnotationMirror)","url":"getTypeFrameFromAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getUnboxedType(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"getUnboxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUnderInitializationAnnotationOfSuperType(TypeMirror)","url":"getUnderInitializationAnnotationOfSuperType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getUninitializedFields(NullnessStore, TreePath, boolean, Collection<? extends AnnotationMirror>)","url":"getUninitializedFields(org.checkerframework.checker.nullness.NullnessStore,com.sun.source.util.TreePath,boolean,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUninitializedFields(Store, TreePath, boolean, Collection<? extends AnnotationMirror>)","url":"getUninitializedFields(Store,com.sun.source.util.TreePath,boolean,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUninitializedInvariantFields(Store, TreePath, boolean, List<? extends AnnotationMirror>)","url":"getUninitializedInvariantFields(Store,com.sun.source.util.TreePath,boolean,java.util.List)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"getUnitsRel()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"getValue()"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"getValue(JavaExpression)","url":"getValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"greatestLowerBoundInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"greatestLowerBoundInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"GTEN1"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"GTEN1"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBY"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYBOTTOM"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYUNKNOWN"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardedByValueElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDSATISFIED"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardSatisfiedValueElement"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectChecker","l":"GuiEffectChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"GuiEffectOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"GuiEffectTypeFactory(BaseTypeChecker, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"GuiEffectVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"h"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleConditionalStatementIsPresentGet(IfTree)","url":"handleConditionalStatementIsPresentGet(com.sun.source.tree.IfTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleCreationElimination(MethodInvocationTree)","url":"handleCreationElimination(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleNestedOptionalCreation(MethodInvocationTree)","url":"handleNestedOptionalCreation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleTernaryIsPresentGet(ConditionalExpressionTree)","url":"handleTernaryIsPresentGet(com.sun.source.tree.ConditionalExpressionTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasCreatesMustCallFor(MethodInvocationNode)","url":"hasCreatesMustCallFor(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hasError()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(AnnotatedTypeMirror, VariableElement)","url":"hasFieldInvariantAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(AnnotatedTypeMirror, VariableElement)","url":"hasFieldInvariantAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(VariableTree)","url":"hasFieldInvariantAnnotation(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.checker.calledmethods","c":"EnsuresCalledMethodOnExceptionContract","l":"hashCode()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"hasLowerBoundTypeByClass(Node, Class<? extends Annotation>)","url":"hasLowerBoundTypeByClass(org.checkerframework.dataflow.cfg.node.Node,java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotatedTypeMirror)","url":"hasNoPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotationMirror)","url":"hasNoPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasNotOwning(Element)","url":"hasNotOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoUnits(AnnotatedTypeMirror)","url":"hasNoUnits(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasOwning(Element)","url":"hasOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, int)","url":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, int)","url":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, String)","url":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, String)","url":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnit(AnnotatedTypeMirror, AnnotationMirror)","url":"hasSpecificUnit(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnitIgnoringPrefix(AnnotatedTypeMirror, AnnotationMirror)","url":"hasSpecificUnitIgnoringPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromValue(AnnotationMirror)","url":"hasSubsequenceFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceValue(AnnotationMirror)","url":"hasSubsequenceSubsequenceValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToValue(AnnotationMirror)","url":"hasSubsequenceToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnits(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"havePairOfUnits(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnitsIgnoringOrder(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"havePairOfUnitsIgnoringOrder(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"I18nAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"I18nChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMAT"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATBOTTOM"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"I18nFormatCall(MethodInvocationTree, AnnotatedTypeFactory)","url":"%3Cinit%3E(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMATFOR"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATFOR_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatForValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18nFormatterAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterChecker","l":"I18nFormatterChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"I18nFormatterTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"I18nFormatterTreeUtil(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"I18nFormatterVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NINVALID"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NINVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nInvalidFormatValueElement"},{"p":"org.checkerframework.checker.i18n","c":"I18nSubchecker","l":"I18nSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NUNKNOWNFORMAT"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"IGNORED_EXCEPTIONS"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"ignoredExceptionTypes"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"inConstructorOrInitializer"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"IndexAbstractTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index","c":"IndexChecker","l":"IndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"IndexMethodIdentifier(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, BinaryOperationNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.BinaryOperationNode)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, Node, Node)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"initAnnoNames"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"initAnnos"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"initChecker()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"InitializationAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"InitializationChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"InitializationQualifierHierarchy()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(CFAbstractAnalysis<V, S, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(S)","url":"%3Cinit%3E(S)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"InitializationTransfer(CFAbstractAnalysis<V, S, T>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"InitializationVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"INITIALIZED"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"initializedFieldsAfterCall(MethodInvocationNode)","url":"initializedFieldsAfterCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.checker.optional","c":"OptionalTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertLockPossiblyHeld(JavaExpression)","url":"insertLockPossiblyHeld(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertValue(JavaExpression, CFValue, boolean)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"insertValue(JavaExpression, V, boolean)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"INTERNAL_FORM"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"internalVisualize(CFGVisualizer<CFValue, LockStore, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"internalVisualize(CFGVisualizer<NullnessValue, NullnessStore, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"internalVisualize(CFGVisualizer<V, S, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"InterningAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.interning","c":"InterningChecker","l":"InterningChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"InterningVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"INVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","url":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","url":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatValueElement"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"invariantFields"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isArgumentNull(TypeMirror)","url":"isArgumentNull(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isAsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isAsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isBottom()"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"isCallToKeyset(ExpressionTree)","url":"isCallToKeyset(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isDirectlyMarkedUIThroughInference(Tree)","url":"isDirectlyMarkedUIThroughInference(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"isEnabled(AccumulationChecker.AliasAnalysis)","url":"isEnabled(org.checkerframework.common.accumulation.AccumulationChecker.AliasAnalysis)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isFbcBottom(AnnotatedTypeMirror)","url":"isFbcBottom(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isFbcBottom(AnnotationMirror)","url":"isFbcBottom(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"isFieldInitialized(Element)","url":"isFieldInitialized(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isFormatMethodCall(MethodInvocationTree, AnnotatedTypeFactory)","url":"isFormatMethodCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"isGuavaImmutableType(TypeMirror)","url":"isGuavaImmutableType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isHasFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isHasFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"isIgnoredExceptionType(TypeMirror)","url":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"isIgnoredExceptionType(TypeMirror)","url":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnalysis","l":"isIgnoredExceptionType(TypeMirror)","url":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","url":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isIndexOfString(Tree)","url":"isIndexOfString(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitializationAnnotation(AnnotationMirror)","url":"isInitializationAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitialized(AnnotatedTypeMirror)","url":"isInitialized(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitialized(AnnotationMirror)","url":"isInitialized(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitializedForFrame(AnnotatedTypeMirror, TypeMirror)","url":"isInitializedForFrame(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isInt()"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isInvocationOfEquals(MethodInvocationTree)","url":"isInvocationOfEquals(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isIsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isIsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"isKeyForMap(String, ExpressionTree)","url":"isKeyForMap(java.lang.String,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(ExecutableElement)","url":"isLengthOfMethodInvocation(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Node)","url":"isLengthOfMethodInvocation(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Tree)","url":"isLengthOfMethodInvocation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(AnnotationMirror, String)","url":"isLessThan(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(Tree, String)","url":"isLessThan(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanByValue(Tree, String, TreePath)","url":"isLessThanByValue(com.sun.source.tree.Tree,java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOf(String)","url":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOf(String)","url":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOfAny(List<String>)","url":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOfAny(List<String>)","url":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(AnnotationMirror, String)","url":"isLessThanOrEqual(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(Tree, String)","url":"isLessThanOrEqual(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanOrEqualTo(String)","url":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanOrEqualTo(String)","url":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLiteral()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isLiteral()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isMakeFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isMakeFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isMapGet(Node)","url":"isMapGet(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMax(Tree)","url":"isMathMax(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMin(Tree)","url":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isMathMin(Tree)","url":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathRandom(Tree, ProcessingEnvironment)","url":"isMathRandom(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegativeOrZero()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegOne()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNonNegative()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"isNonNegative(Tree)","url":"isNonNegative(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNonNullOrAlias(AnnotationMirror)","url":"isNonNullOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"isNotFullyInitializedReceiver(MethodTree)","url":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNullableOrAlias(AnnotationMirror)","url":"isNullableOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNullnessAnnotation(AnnotationMirror)","url":"isNullnessAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isPoly()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isPoly()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isPolymorphicType(TypeElement)","url":"isPolymorphicType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNonNull()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNull()"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextDouble(Tree, ProcessingEnvironment)","url":"isRandomNextDouble(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextInt(Tree, ProcessingEnvironment)","url":"isRandomNextInt(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isRandomNextInt(Tree)","url":"isRandomNextInt(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isSafe()"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"isSequenceType(TypeMirror)","url":"isSequenceType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"isSideEffectFree(ExecutableElement)","url":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"isSubtypeInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"isSupportedAnnotationClass(Class<? extends Annotation>)","url":"isSupportedAnnotationClass(java.lang.Class)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isUI()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isUIType(TypeElement)","url":"isUIType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnderInitialization(AnnotatedTypeMirror)","url":"isUnderInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnderInitialization(AnnotationMirror)","url":"isUnderInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotatedTypeMirror)","url":"isUnknownInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotationMirror)","url":"isUnknownInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isValidArgument(ConversionCategory, TypeMirror)","url":"isValidArgument(org.checkerframework.checker.formatter.qual.ConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidFormatForInvocation()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidParameter(I18nConversionCategory, TypeMirror)","url":"isValidParameter(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValidReplacement(String, String, UBQualifier.LessThanLengthOf)","url":"isValidReplacement(java.lang.String,java.lang.String,org.checkerframework.checker.index.upperbound.UBQualifier.LessThanLengthOf)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValuePlusOffsetLessThanMinLen(String, long, int)","url":"isValuePlusOffsetLessThanMinLen(java.lang.String,long,int)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"isWpiEnabledForRLC()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"isWpiEnabledForRLC()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"isWpiEnabledForRLC()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"isWpiEnabledForRLC()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"javaLangExceptionType"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"javaxGuardedBy"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"jcipGuardedBy"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFOR_NAME"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"KeyForAnalysis(BaseTypeChecker, KeyForAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KeyForAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFORBOTTOM"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"KeyForPropagationTreeAnnotator(AnnotatedTypeFactory, KeyForPropagator)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.checker.nullness.KeyForPropagator)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"KeyForPropagator(AnnotationMirror)","url":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractAnalysis<KeyForValue, KeyForStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractStore<KeyForValue, KeyForStore>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForSubchecker","l":"KeyForSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"KeyForTransfer(KeyForAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.KeyForAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"keyForTypeFactory"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"KeyForValue(CFAbstractAnalysis<KeyForValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"keyForValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"keyForValueElement"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"KeyLookupTreeAnnotator(BaseAnnotatedTypeFactory, Class<? extends Annotation>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseAnnotatedTypeFactory,java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kg"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km3"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kmPERh"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kN"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"leastUpperBound(LockStore)","url":"leastUpperBound(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"leastUpperBound(NullnessStore)","url":"leastUpperBound(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"leastUpperBound(S)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"leastUpperBoundInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"leastUpperBoundInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"left"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"leftAnno"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LESS_THAN_UNKNOWN"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LessThanAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"LessThanChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"lessThanOrEqual(OffsetEquation)","url":"lessThanOrEqual(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"lessThanOrEqualTo(Effect, Effect)","url":"lessThanOrEqualTo(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"LessThanTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"LessThanVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"LocalizableKeyAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyChecker","l":"LocalizableKeyChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"location"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"LockAnalysis(BaseTypeChecker, LockAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.lock.LockAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LockAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockChecker","l":"LockChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKHELD"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKPOSSIBLYHELD"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, boolean)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, CFAbstractStore<CFValue, LockStore>)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"LockTransfer(LockAnalysis, LockChecker)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.checker.lock.LockChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"LockTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"LockVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"LombokSupport(CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"LowerBoundAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"LowerBoundChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"LowerBoundTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"LowerBoundVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltEqLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltOMLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"lubTypeFrame(TypeMirror, TypeMirror)","url":"lubTypeFrame(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m3"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"makeFormatCallCategories(MethodInvocationNode, I18nFormatterAnnotatedTypeFactory)","url":"makeFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(LockStore, Node)","url":"makeLockHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(TransferResult<CFValue, LockStore>, Node)","url":"makeLockHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(LockStore, Node)","url":"makeLockPossiblyHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(TransferResult<CFValue, LockStore>, Node)","url":"makeLockPossiblyHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"makeNonNull(NullnessStore, Node)","url":"makeNonNull(org.checkerframework.checker.nullness.NullnessStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"makeNonNull(TransferResult<NullnessValue, NullnessStore>, Node)","url":"makeNonNull(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"MAP_TYPE"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"markInvariantFieldsAsInitialized(List<VariableElement>, TypeElement)","url":"markInvariantFieldsAsInitialized(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"max"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"mayAppearInSameLen(JavaExpression)","url":"mayAppearInSameLen(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"maybeIntegral(AnnotatedTypeMirror)","url":"maybeIntegral(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"messageKeyMatches(String, String)","url":"messageKeyMatches(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror, boolean)","url":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror, boolean)","url":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree, boolean)","url":"methodFromUse(com.sun.source.tree.MethodInvocationTree,boolean)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType, boolean)","url":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,boolean)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"min"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"min(Effect, Effect)","url":"min(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"mixedUnits"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm3"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"MONOTONIC_NONNULL"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"mostSpecific(KeyForValue, KeyForValue)","url":"mostSpecific(org.checkerframework.checker.nullness.KeyForValue,org.checkerframework.checker.nullness.KeyForValue)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"MustCallInference","l":"MUSTCALLALIAS"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"MustCallAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"MustCallChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallNoCreatesMustCallForChecker","l":"MustCallNoCreatesMustCallForChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"MustCallTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"MustCallTypeAnnotator(MustCallAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.mustcall.MustCallAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"MustCallVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"N"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"NEG_1"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"negateString(String)","url":"negateString(java.lang.String)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"NEGATIVEONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"NEGATIVEONE"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NEWOBJECT"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"newResult"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"NN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"NN"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_CREATES_MUSTCALLFOR"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_LIGHTWEIGHT_OWNERSHIP"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_RESOURCE_ALIASES"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NONNULL"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"NONNULL_ANNOTATIONS"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NOT_EFFECTIVELY_FINAL"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"NOT_ONLY_INITIALIZED"},{"p":"org.checkerframework.checker.resourceleak","c":"MustCallInference","l":"NOTOWNING"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NULLABLE"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NULLABLE"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"NULLARRAY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"NullnessAnalysis(BaseTypeChecker, NullnessAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"nullnessAnnos"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NullnessAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter","l":"NullnessAnnotatedTypeFormatter(boolean, boolean)","url":"%3Cinit%3E(boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"NullnessChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"NullnessFormattingVisitor(AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.javacutil.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"NullnessPropagationTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"NullnessQualifierHierarchy()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"NullnessStore(CFAbstractAnalysis<NullnessValue, NullnessStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"NullnessStore(NullnessStore)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NullnessTransfer(NullnessAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"NullnessTreeAnnotator(NullnessAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTypeAnnotator","l":"NullnessTypeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"nullnessTypeFactory"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"NullnessValue(CFAbstractAnalysis<NullnessValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"NullnessVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"numberOfIterationsBeforeWidening()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"objectTypeMirror"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"OffsetDependentTypesHelper(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"OffsetEquation(OffsetEquation)","url":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ONE"},{"p":"org.checkerframework.checker.optional","c":"OptionalAnnotatedTypeFactory","l":"OptionalAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.optional","c":"OptionalChecker","l":"OptionalChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.optional","c":"OptionalTransfer","l":"OptionalTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"OptionalVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"MustCallInference","l":"OWNING"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"parseExceptionSpecifier(String, String)","url":"parseExceptionSpecifier(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"parseIgnoredExceptions(String)","url":"parseIgnoredExceptions(java.lang.String)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"PARTIALREGEX"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"POLY_SIGNED"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"POLYNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"POLYNULL"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"POLYREGEX"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"POLYUI"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POS"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"POS"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"postAnalyze(ControlFlowGraph)","url":"postAnalyze(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","url":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"predefinedSystemProperties"},{"p":"org.checkerframework.checker.optional","c":"OptionalAnnotatedTypeFactory","l":"PRESENT"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"PRIMITIVE_TYPE"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"processMethodTree(MethodTree)","url":"processMethodTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagate(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, KeyForPropagator.PropagationDirection, AnnotatedTypeFactory)","url":"propagate(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.checker.nullness.KeyForPropagator.PropagationDirection,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagateNewClassTree(NewClassTree, AnnotatedTypeMirror, KeyForAnnotatedTypeFactory)","url":"propagateNewClassTree(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"PropertyKeyAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyChecker","l":"PropertyKeyChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"refineToNonNull(TransferResult<NullnessValue, NullnessStore>)","url":"refineToNonNull(org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEX"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"RegexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEXBOTTOM"},{"p":"org.checkerframework.checker.regex","c":"RegexChecker","l":"RegexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"RegexTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"regexValueElement"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"RegexVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeOffset(String, int)","url":"removeOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotatedTypeMirror)","url":"removePrefix(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotationMirror)","url":"removePrefix(javax.lang.model.util.Elements,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccess(List<String>)","url":"removeSequenceLengthAccess(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccessAndNeg1(List<String>)","url":"removeSequenceLengthAccessAndNeg1(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"removeSequenceLengths(List<String>)","url":"removeSequenceLengths(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"replacePolyQualifier(AnnotatedTypeMirror, Tree)","url":"replacePolyQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"reportError(Object, String, Object...)","url":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnalysis","l":"ResourceLeakAnalysis(ResourceLeakChecker, CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.resourceleak.ResourceLeakChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"ResourceLeakAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"ResourceLeakChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"ResourceLeakTransfer(ResourceLeakAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.resourceleak.ResourceLeakAnalysis)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"ResourceLeakVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"Result(E, ExpressionTree)","url":"%3Cinit%3E(E,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"returnsThis(MethodInvocationTree)","url":"returnsThis(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"right"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"rightAnno"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"s"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"SameLenAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenAnnotationFromTree(Tree)","url":"sameLenAnnotationFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenChecker","l":"SameLenChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"SameLenTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"SameLenTreeAnnotator(SameLenAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.index.samelen.SameLenAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenValueElement"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"SameLenVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"SearchIndexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"SearchIndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"searchIndexForValueElement"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"SearchIndexTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"SELF_RECEIVER_PATTERN"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"setInConstructorOrInitializer()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"setPolyNullNonNull(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"setPolyNullNull(boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"setSelfTypeInInitializationCode(Tree, AnnotatedTypeMirror.AnnotatedDeclaredType, TreePath)","url":"setSelfTypeInInitializationCode(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"shouldHaveNoMustCallObligation(TypeMirror)","url":"shouldHaveNoMustCallObligation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"shouldPerformContractInference()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"shouldPerformWholeProgramInference(Tree, Tree)","url":"shouldPerformWholeProgramInference(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"shouldPerformWholeProgramInference(Tree, Tree)","url":"shouldPerformWholeProgramInference(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"shouldPerformWholeProgramInference(Tree)","url":"shouldPerformWholeProgramInference(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"shouldPerformWholeProgramInference(Tree)","url":"shouldPerformWholeProgramInference(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"shouldSkipUses(String)","url":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"shouldSkipUses(String)","url":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"SIDEEFFECTFREE"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SIGNATURE_UNKNOWN"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SignatureAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"SignatureChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"SignatureTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED_POSITIVE"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNEDNESS_BOTTOM"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SignednessAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"SignednessChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"SignednessVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"singleton(TypeMirror)","url":"singleton(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"skipBlocks(StatementTree)","url":"skipBlocks(com.sun.source.tree.StatementTree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<NullnessValue, NullnessStore>, Node, Node, NullnessValue, NullnessValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessValue,boolean)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"SubstringIndexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexChecker","l":"SubstringIndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForValueElement"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"supersetOf(CFAbstractStore<NullnessValue, NullnessStore>)","url":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"supersetOf(CFAbstractStore<V, S>)","url":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"systemGetPropertyHandler"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"SystemGetPropertyHandler(ProcessingEnvironment, NullnessAnnotatedTypeFactory, boolean)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"t"},{"p":"org.checkerframework.checker.tainting","c":"TaintingAnnotatedTypeFactory","l":"TaintingAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingChecker","l":"TaintingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"TaintingVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"thenStore"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"to"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUBTYPE"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUPERTYPE"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"toString()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"toString()"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"toString()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"toStringSimple()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"transform(JavaExpression)","url":"transform(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"translations"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"UBQualifier()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"UI"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiAnonClasses"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiLambdas"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"UNDER_INITALIZATION"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"underInitializationValueElement"},{"p":"org.checkerframework.checker.resourceleak","c":"SetOfTypes","l":"union(SetOfTypes...)","url":"union(org.checkerframework.checker.resourceleak.SetOfTypes...)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"uniqueName(String)","url":"uniqueName(java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"UnitsAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"UnitsAnnotatedTypeFormatter(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"UnitsAnnotationClassLoader(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"UnitsAnnotationFormatter(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"UnitsChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"UnitsFormattingVisitor(BaseTypeChecker, AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.javacutil.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"UnitsQualifierHierarchy()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierKindHierarchy","l":"UnitsQualifierKindHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"UnitsRelationsDefault()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"UnitsRelationsTools()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"UnitsVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"UNKNOWN_INITIALIZATION"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"UNKNOWNFORMAT"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"unknownInitializationValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"UNKNOWNKEYFOR"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"UNKNOWNREGEX"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"unusedWhenElement"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"updateForMethodCall(MethodInvocationNode, AnnotatedTypeFactory, CFValue)","url":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"updateForMethodCall(MethodInvocationNode, AnnotatedTypeFactory, V)","url":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory,V)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"updateStoreWithTempVar(TransferResult<AccumulationValue, AccumulationStore>, Node)","url":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"updateStoreWithTempVar(TransferResult<CFValue, CFStore>, Node)","url":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"upperBound(KeyForValue, TypeMirror, boolean)","url":"upperBound(org.checkerframework.checker.nullness.KeyForValue,javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"upperBound(NullnessValue, TypeMirror, boolean)","url":"upperBound(org.checkerframework.checker.nullness.NullnessValue,javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UpperBoundAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"UpperBoundChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"upperBoundLiteralValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"UpperBoundTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"UpperBoundTreeAnnotator(UpperBoundAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"UpperBoundVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"USE_VALUE_CHECKER"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","url":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"validateTypeOf(Tree)","url":"validateTypeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"value()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"values()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"values()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"values()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"VARARG"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAnnotatedType(List<? extends AnnotationTree>, Tree)","url":"visitAnnotatedType(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitArrayAccess(ArrayAccessNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAssert(AssertTree, Void)","url":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitAssignment(AssignmentNode, TransferInput<V, S>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitBitwiseAnd(BitwiseAndNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitCase(CaseNode, TransferInput<CFValue, CFStore>)","url":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<CFValue, CFStore>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<V, S>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitInstanceOf(InstanceOfNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerDivision(IntegerDivisionNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitIntegerLiteral(IntegerLiteralNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitMemberReference(MemberReferenceTree, Void)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMethod(MethodTree, AnnotatedTypeMirror)","url":"visitMethod(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitMethodAccess(MethodAccessNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<KeyForValue, KeyForStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<V, S>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, Set<AnnotatedTypeMirror>)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.Set)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalMultiplication(NumericalMultiplicationNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<CFValue, CFStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitReturn(ReturnNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitSignedRightShift(SignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitStringConversion(StringConversionNode, TransferInput<CFValue, CFStore>)","url":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitSwitchExpression17(Tree)","url":"visitSwitchExpression17(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<CFValue, CFStore>)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"visitSynchronized(SynchronizedNode, TransferInput<CFValue, LockStore>)","url":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<CFValue, CFStore>)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitThrow(ThrowNode, TransferInput<NullnessValue, NullnessStore>)","url":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitUnsignedRightShift(UnsignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","url":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","url":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","url":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","url":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"warnInvalidPolymorphicQualifier(ClassTree)","url":"warnInvalidPolymorphicQualifier(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"widenedUpperBound(AnnotationMirror, AnnotationMirror)","url":"widenedUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"widenUpperBound(UBQualifier)","url":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"widenUpperBound(UBQualifier)","url":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"withoutClose(AnnotationMirror)","url":"withoutClose(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"wpiAdjustForUpdateField(Tree, Element, String, AnnotatedTypeMirror)","url":"wpiAdjustForUpdateField(com.sun.source.tree.Tree,javax.lang.model.element.Element,java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"wpiAdjustForUpdateNonField(AnnotatedTypeMirror)","url":"wpiAdjustForUpdateNonField(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"wpiPrepareMethodForWriting(AMethod)","url":"wpiPrepareMethodForWriting(org.checkerframework.afu.scenelib.el.AMethod)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"wpiPrepareMethodForWriting(WholeProgramInferenceJavaParserStorage.CallableDeclarationAnnos, Collection<WholeProgramInferenceJavaParserStorage.CallableDeclarationAnnos>, Collection<WholeProgramInferenceJavaParserStorage.CallableDeclarationAnnos>)","url":"wpiPrepareMethodForWriting(org.checkerframework.common.wholeprograminference.WholeProgramInferenceJavaParserStorage.CallableDeclarationAnnos,java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"wpiShouldInferTypesForReceivers()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ZERO"}]